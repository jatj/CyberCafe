/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cyber.app;

import java.awt.Image;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Gearnest
 */
public class Servidor extends javax.swing.JFrame {

    /**
     * Creates new form Servidor
     */
    static ServerSocket ss;
    static ArrayList sockets = new ArrayList<Socket>();
    static Thread coneccionThread;
    static ArrayList computadoras = new ArrayList<Computadora>();
    
    public Servidor() {
        initComponents();
        initServer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        equipoPanel = new javax.swing.JPanel();
        PC1 = new javax.swing.JPanel();
        computadoraLabel1 = new javax.swing.JLabel();
        desbloquear1 = new javax.swing.JButton();
        bitácoraPanel = new javax.swing.JPanel();
        configuracionPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        equipoPanel.setLayout(new java.awt.GridLayout(2, 4, 5, 5));

        PC1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        computadoraLabel1.setBackground(new java.awt.Color(255, 255, 255));
        computadoraLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Image imgPC =new javax.swing.ImageIcon(getClass().getResource("/com/cyber/imagenes/pc.png")).getImage();
        ImageIcon iconPC = new ImageIcon(imgPC.getScaledInstance(150,150,Image.SCALE_SMOOTH));
        computadoraLabel1.setIcon(iconPC);
        computadoraLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        desbloquear1.setText("Desbloquear");

        javax.swing.GroupLayout PC1Layout = new javax.swing.GroupLayout(PC1);
        PC1.setLayout(PC1Layout);
        PC1Layout.setHorizontalGroup(
            PC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(computadoraLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(desbloquear1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
        );
        PC1Layout.setVerticalGroup(
            PC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PC1Layout.createSequentialGroup()
                .addComponent(computadoraLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(desbloquear1)
                .addContainerGap())
        );

        equipoPanel.add(PC1);

        jTabbedPane1.addTab("Equipos", equipoPanel);

        bitácoraPanel.setLayout(new java.awt.GridLayout());
        jTabbedPane1.addTab("Bitácora", bitácoraPanel);

        configuracionPanel.setLayout(new java.awt.GridLayout());
        jTabbedPane1.addTab("Configuración", configuracionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Servidor serv = new Servidor();
                
                //serv.setExtendedState(JFrame.MAXIMIZED_BOTH); 
                serv.setLocationRelativeTo(null);  
                serv.setVisible(true);
                
            }
        }); 
    }
    
    public void initServer(){
        //Inicializa servidor
        try {
            ss = new ServerSocket(1201);
        } catch (Exception e) {
        }
        Servidor s = this;
        //Inicializa socket
        coneccionThread = new Thread(new Runnable() {
            public void run() {
                System.out.println("Corriendo Gestor de conexiones");
                while (computadoras.size() < 8) {
                    try {
                        // Servidor acepta conecciones
                        sockets.add(ss.accept());
                        System.out.println("Conección realizada");
                        computadoras.add(new Computadora(s, (Socket) sockets.get(sockets.size() - 1), "PC - " + sockets.size()));
                        ((Computadora) computadoras.get(computadoras.size() - 1)).start();
                        ((Computadora) computadoras.get(computadoras.size() - 1)).bloquea();
                    } catch (Exception e) {
                    }

                }
            }
        });
        coneccionThread.start();
    }
    
    public void eliminaComputadora(String nombre){
        for(int i = 0; i < computadoras.size(); i++){
            if(((Computadora)computadoras.get(i)).nombrePC.equals(nombre)){
                computadoras.remove(i);
                sockets.remove(i);
                System.out.println("PC "+nombre+" eliminada");
                System.out.println("Cuenta "+computadoras.size());
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PC1;
    private javax.swing.JPanel bitácoraPanel;
    private javax.swing.JLabel computadoraLabel1;
    private javax.swing.JPanel configuracionPanel;
    private javax.swing.JButton desbloquear1;
    private javax.swing.JPanel equipoPanel;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
